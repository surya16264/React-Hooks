{"ast":null,"code":"var _jsxFileName = \"/home/codilar/ReactHooks/hook-app/src/component/Loader/index.js\";\nimport './Loader.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Loader = props => {\n  const {\n    isLoading\n  } = props;\n  console.log(props);\n  if (isLoading) return null;\n\n  const renderMain = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      block: \"Loader\",\n      elem: \"Main\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    block: \"Loader\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      block: \"Loader\",\n      elem: \"Scale\",\n      children: renderMain()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Loader;\nexport default Loader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"sources":["/home/codilar/ReactHooks/hook-app/src/component/Loader/index.js"],"names":["Loader","props","isLoading","console","log","renderMain"],"mappings":";AAAA,OAAO,qBAAP;;;AAEA,MAAMA,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,MAAGC,SAAH,EAAc,OAAO,IAAP;;AAEd,QAAMG,UAAU,GAAG,MAAM;AACrB,wBACI;AAAK,MAAA,KAAK,EAAC,QAAX;AAAoB,MAAA,IAAI,EAAC,MAAzB;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND;;AAQA,sBACI;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA,2BACI;AAAK,MAAA,KAAK,EAAC,QAAX;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAA,gBACMA,UAAU;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CApBD;;KAAML,M;AAsBN,eAAeA,MAAf","sourcesContent":["import './Loader.style.scss';\n\nconst Loader = (props) => {\n    const { isLoading } = props;\n    console.log(props)\n    if(isLoading) return null;\n\n    const renderMain = () => {\n        return (\n            <div block=\"Loader\" elem=\"Main\">\n                <span />\n            </div>\n        );\n    }\n\n    return (\n        <div block=\"Loader\">\n            <div block=\"Loader\" elem=\"Scale\">\n                { renderMain() }\n            </div>\n        </div>\n    );\n}\n\nexport default Loader"]},"metadata":{},"sourceType":"module"}