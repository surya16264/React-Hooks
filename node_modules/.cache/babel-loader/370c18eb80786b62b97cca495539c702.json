{"ast":null,"code":"var _jsxFileName = \"/home/codilar/ReactHooks/hook-app/src/component/Books/Books.container.js\",\n    _s = $RefreshSig$();\n\nimport useFetch from \"react-fetch-hook\";\nimport Books from \"./Books.component\";\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PaginateReducer from '../../store/Pagination/Pagination.reducer';\nimport { previousPageAction, nextPageAction } from '../../store/Pagination/Pagination.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const mapStateToProps = state => ({\n  currentPage: state.PaginateReducer.Page\n}); // /**\n//  * \n//  * @param {*} dispatch \n//  * @returns In this method we directly dispatching that action method by \n//     importing themeToggleAction method in themeToggle.action file\n//  */\n// export const mapDispatchToProps = (dispatch) => ({\n//     goPreviousPage: () => dispatch(previousPageAction()),\n//     goNextPage: () => dispatch(nextPageAction())\n// })\n\n/**\n//  * \n//  * @param {*} dispatch \n//  * @returns In this method we calling that dispatcher and then \n//     dipatching that action method using dipatcher method\n//  */\n// export const mapDispatchToProps = (dispatch) => ({\n//     goPreviousPage: () => PaginateReducer.previousPagePaginate(dispatch),\n//     goNextPage: () => PaginateReducer.nextPagePaginate(dispatch)\n// })\n\nconst BooksContainer = props => {\n  _s();\n\n  const [perPage] = useState(10);\n  const {\n    currentPage\n  } = props;\n  const containerFunctions = {\n    pageCalculation: () => pageCalculation()\n  };\n\n  const containerProps = () => {\n    const {\n      goNextPage,\n      goPreviousPage\n    } = props;\n    return {\n      currentPage,\n      goNextPage,\n      goPreviousPage\n    };\n  };\n\n  const url = 'https://s3-ap-southeast-1.amazonaws.com/he-public-data/books8f8fe52.json';\n  const {\n    isLoading,\n    error,\n    data = []\n  } = useFetch(url); // console.log(useFetch(url));\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 26\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error.status\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 22\n  }, this);\n\n  const pageCalculation = () => {\n    let lastIndex = currentPage * perPage;\n    let firstIndex = lastIndex - perPage;\n    const Books = data.slice(0, 100);\n    return Books.slice(firstIndex, lastIndex).map(book => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: book.authors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\"\\u20B9\", book.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: book.average_rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, book.bookID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Books, { ...containerFunctions,\n    ...containerProps()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BooksContainer, \"h7KH1QyOgVmqctisJ3V30bDFwWc=\", false, function () {\n  return [useFetch];\n});\n\n_c = BooksContainer;\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksContainer\");","map":{"version":3,"sources":["/home/codilar/ReactHooks/hook-app/src/component/Books/Books.container.js"],"names":["useFetch","Books","useState","connect","PaginateReducer","previousPageAction","nextPageAction","mapStateToProps","state","currentPage","Page","BooksContainer","props","perPage","containerFunctions","pageCalculation","containerProps","goNextPage","goPreviousPage","url","isLoading","error","data","status","lastIndex","firstIndex","slice","map","book","title","authors","price","average_rating","bookID","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,0CAAnD;;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAD,KAAY;AACvCC,EAAAA,WAAW,EAAED,KAAK,CAACJ,eAAN,CAAsBM;AADI,CAAZ,CAAxB,C,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAK,CAACC,OAAD,IAAYX,QAAQ,CAAC,EAAD,CAAzB;AACA,QAAK;AAAEO,IAAAA;AAAF,MAAkBG,KAAvB;AAEA,QAAME,kBAAkB,GAAG;AACvBC,IAAAA,eAAe,EAAE,MAAMA,eAAe;AADf,GAA3B;;AAIA,QAAMC,cAAc,GAAG,MAAM;AACzB,UAAK;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAiCN,KAAtC;AAEA,WAAO;AACHH,MAAAA,WADG;AAEHQ,MAAAA,UAFG;AAGHC,MAAAA;AAHG,KAAP;AAKH,GARD;;AAUA,QAAMC,GAAG,GAAG,0EAAZ;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,IAAI,GAAC;AAAzB,MAAgCtB,QAAQ,CAACmB,GAAD,CAA9C,CAnB8B,CAoB9B;;AAEA,MAAGC,SAAH,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,MAAGC,KAAH,EAAU,oBAAO;AAAA,cAAMA,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEV,QAAMR,eAAe,GAAG,MAAM;AAC1B,QAAIS,SAAS,GAAGf,WAAW,GAAGI,OAA9B;AACA,QAAIY,UAAU,GAAGD,SAAS,GAAGX,OAA7B;AAEA,UAAMZ,KAAK,GAAGqB,IAAI,CAACI,KAAL,CAAW,CAAX,EAAc,GAAd,CAAd;AAEA,WAAQzB,KAAK,CAACyB,KAAN,CAAYD,UAAZ,EAAwBD,SAAxB,EACHG,GADG,CACCC,IAAI,IAAI;AACT,0BACI;AAAA,gCACI;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,+BAAMF,IAAI,CAACG,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAASJ,IAAI,CAACK,MAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KAVG,CAAR;AAYH,GAlBD;;AAoBA,sBACI,QAAC,KAAD,OACQnB,kBADR;AAAA,OAEQE,cAAc;AAFtB;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAnDD;;GAAML,c;UAmBoCX,Q;;;KAnBpCW,c;AAqDN,eAAeR,OAAO,CAACI,eAAD,EAAkB2B,kBAAlB,CAAP,CAA6CvB,cAA7C,CAAf","sourcesContent":["import useFetch from \"react-fetch-hook\";\nimport Books from \"./Books.component\";\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PaginateReducer from '../../store/Pagination/Pagination.reducer';\nimport { previousPageAction, nextPageAction } from '../../store/Pagination/Pagination.action';\n\nexport const mapStateToProps = (state) => ({\n    currentPage: state.PaginateReducer.Page\n})\n\n// /**\n//  * \n//  * @param {*} dispatch \n//  * @returns In this method we directly dispatching that action method by \n//     importing themeToggleAction method in themeToggle.action file\n//  */\n// export const mapDispatchToProps = (dispatch) => ({\n//     goPreviousPage: () => dispatch(previousPageAction()),\n//     goNextPage: () => dispatch(nextPageAction())\n// })\n\n/**\n//  * \n//  * @param {*} dispatch \n//  * @returns In this method we calling that dispatcher and then \n//     dipatching that action method using dipatcher method\n//  */\n// export const mapDispatchToProps = (dispatch) => ({\n//     goPreviousPage: () => PaginateReducer.previousPagePaginate(dispatch),\n//     goNextPage: () => PaginateReducer.nextPagePaginate(dispatch)\n// })\n\n\nconst BooksContainer = (props) => {\n    const[perPage] = useState(10);\n    const{ currentPage } = props;\n\n    const containerFunctions = {\n        pageCalculation: () => pageCalculation()\n    }\n\n    const containerProps = () => {\n        const{ goNextPage, goPreviousPage } = props;\n\n        return {\n            currentPage,\n            goNextPage,\n            goPreviousPage\n        }\n    }\n\n    const url = 'https://s3-ap-southeast-1.amazonaws.com/he-public-data/books8f8fe52.json';\n    const { isLoading, error, data=[] } = useFetch(url);\n    // console.log(useFetch(url));\n\n    if(isLoading) return <div>Loading...</div>\n    if(error) return <div>{error.status}</div>\n\n    const pageCalculation = () => {\n        let lastIndex = currentPage * perPage;\n        let firstIndex = lastIndex - perPage;\n\n        const Books = data.slice(0, 100);\n\n        return (Books.slice(firstIndex, lastIndex)\n            .map(book => {\n                return (\n                    <tr key={book.bookID}>\n                        <td>{book.title}</td>\n                        <td>{book.authors}</td>\n                        <td>â‚¹{book.price}</td>\n                        <td>{book.average_rating}</td>\n                    </tr>\n                )\n            })\n        )\n    }\n\n    return(\n        <Books \n            {...containerFunctions}\n            {...containerProps()}\n        />\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksContainer)"]},"metadata":{},"sourceType":"module"}