{"ast":null,"code":"var _jsxFileName = \"/home/codilar/React-Hooks/src/component/Books/Books.container.js\",\n    _s = $RefreshSig$();\n\nimport useFetch from \"react-fetch-hook\";\nimport Books from \"./Books.component\";\nimport { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport Loader from '../Loader';\nimport PaginateDispatcher from '../../store/Pagination/Pagination.dispatcher';\nimport { previousPageAction, nextPageAction } from '../../store/Pagination/Pagination.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const mapStateToProps = state => ({\n  currentPage: state.PaginateReducer.Page\n});\n/**\n * \n * @param {*} dispatch \n * @returns In this method we directly dispatching that action method by \n    importing themeToggleAction method in themeToggle.action file\n */\n// export const mapDispatchToProps = (dispatch) => ({\n//     goPreviousPage: () => dispatch(previousPageAction()),\n//     goNextPage: () => dispatch(nextPageAction())\n// })\n\n/**\n//  * \n//  * @param {*} dispatch \n//  * @returns In this method we calling that dispatcher and then \n//     dipatching that action method using dipatcher method\n//  */\n\nexport const mapDispatchToProps = dispatch => ({\n  goPreviousPage: () => PaginateDispatcher.previousPagePaginate(dispatch),\n  goNextPage: () => PaginateDispatcher.nextPagePaginate(dispatch)\n});\n\nconst BooksContainer = props => {\n  _s();\n\n  const [perPage, setPerPage] = useState(10);\n  const [totalPages, setTotalPages] = useState(perPage);\n  const {\n    currentPage\n  } = props;\n  const containerFunctions = {\n    pageCalculation: () => pageCalculation(),\n    changePerPage: e => changePerPage(e)\n  };\n\n  const containerProps = () => {\n    const {\n      goNextPage,\n      goPreviousPage\n    } = props;\n    return {\n      currentPage,\n      goNextPage,\n      goPreviousPage,\n      totalPages\n    };\n  };\n\n  const url = 'https://s3-ap-southeast-1.amazonaws.com/he-public-data/books8f8fe52.json';\n  const {\n    isLoading,\n    error,\n    data = []\n  } = useFetch(url); // console.log(useFetch(url));\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Loader, {\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 31\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 26\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error.status\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 22\n  }, this);\n\n  const changePerPage = () => {\n    console.log(e.target, \">>>refValue\"); // setPerPage(val);\n    // const Books = data.slice(0,100);\n    // setTotalPages(Books.length/val);  \n  };\n\n  const pageCalculation = () => {\n    let lastIndex = currentPage * perPage;\n    let firstIndex = lastIndex - perPage;\n    const Books = data.slice(0, 100);\n    return Books.slice(firstIndex, lastIndex).map(book => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: book.authors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\"\\u20B9\", book.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: book.average_rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, book.bookID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Books, { ...containerFunctions,\n    ...containerProps()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BooksContainer, \"XltsJ6RTQ15GA5I9vCtf0tliZQI=\", false, function () {\n  return [useFetch];\n});\n\n_c = BooksContainer;\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksContainer\");","map":{"version":3,"sources":["/home/codilar/React-Hooks/src/component/Books/Books.container.js"],"names":["useFetch","Books","useState","useRef","connect","Loader","PaginateDispatcher","previousPageAction","nextPageAction","mapStateToProps","state","currentPage","PaginateReducer","Page","mapDispatchToProps","dispatch","goPreviousPage","previousPagePaginate","goNextPage","nextPagePaginate","BooksContainer","props","perPage","setPerPage","totalPages","setTotalPages","containerFunctions","pageCalculation","changePerPage","e","containerProps","url","isLoading","error","data","status","console","log","target","lastIndex","firstIndex","slice","map","book","title","authors","price","average_rating","bookID"],"mappings":"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","sourcesContent":["import useFetch from \"react-fetch-hook\";\nimport Books from \"./Books.component\";\nimport { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport Loader from '../Loader';\nimport PaginateDispatcher from '../../store/Pagination/Pagination.dispatcher';\nimport { previousPageAction, nextPageAction } from '../../store/Pagination/Pagination.action';\n\nexport const mapStateToProps = (state) => ({\n    currentPage: state.PaginateReducer.Page\n})\n\n/**\n * \n * @param {*} dispatch \n * @returns In this method we directly dispatching that action method by \n    importing themeToggleAction method in themeToggle.action file\n */\n// export const mapDispatchToProps = (dispatch) => ({\n//     goPreviousPage: () => dispatch(previousPageAction()),\n//     goNextPage: () => dispatch(nextPageAction())\n// })\n\n/**\n//  * \n//  * @param {*} dispatch \n//  * @returns In this method we calling that dispatcher and then \n//     dipatching that action method using dipatcher method\n//  */\nexport const mapDispatchToProps = (dispatch) => ({\n    goPreviousPage: () => PaginateDispatcher.previousPagePaginate(dispatch),\n    goNextPage: () => PaginateDispatcher.nextPagePaginate(dispatch)\n})\n\n\nconst BooksContainer = (props) => {\n    const[perPage, setPerPage] = useState(10);\n    const[totalPages, setTotalPages] = useState(perPage);\n    const{ currentPage } = props;\n    \n\n    const containerFunctions = {\n        pageCalculation: () => pageCalculation(),\n        changePerPage: (e) => changePerPage(e)\n    }\n\n    const containerProps = () => {\n        const{ goNextPage, goPreviousPage } = props;\n\n        return {\n            currentPage,\n            goNextPage,\n            goPreviousPage,\n            totalPages\n        }\n    }\n\n    const url = 'https://s3-ap-southeast-1.amazonaws.com/he-public-data/books8f8fe52.json';\n    const { isLoading, error, data=[] } = useFetch(url);\n    // console.log(useFetch(url));\n\n    if(isLoading) return <div><Loader isLoading={isLoading}/></div>\n    if(error) return <div>{error.status}</div>\n\n    const changePerPage = () => {\n        console.log(e.target,\">>>refValue\")\n        // setPerPage(val);\n        // const Books = data.slice(0,100);\n        // setTotalPages(Books.length/val);  \n    }\n\n    const pageCalculation = () => {\n        let lastIndex = currentPage * perPage;\n        let firstIndex = lastIndex - perPage;\n\n        const Books = data.slice(0, 100);\n\n        return (Books.slice(firstIndex, lastIndex)\n            .map(book => {\n                return (\n                    <tr key={book.bookID}>\n                        <td>{book.title}</td>\n                        <td>{book.authors}</td>\n                        <td>₹{book.price}</td>\n                        <td>{book.average_rating}</td>\n                    </tr>\n                )\n            })\n        )\n    }\n\n    return(\n        <Books \n            {...containerFunctions}\n            {...containerProps()}\n        />\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksContainer)"]},"metadata":{},"sourceType":"module"}