{"ast":null,"code":"var _jsxFileName = \"/home/codilar/ReactHooks/hook-app/src/component/Books/Books.container.js\",\n    _s = $RefreshSig$();\n\nimport useFetch from \"react-fetch-hook\";\nimport Books from \"./Books.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BooksContainer = () => {\n  _s();\n\n  const [perPage] = useState;\n  const url = 'https://s3-ap-southeast-1.amazonaws.com/he-public-data/books8f8fe52.json';\n  const {\n    isLoading,\n    error,\n    data = []\n  } = useFetch(url); // console.log(useFetch(url));\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 26\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error.status\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 22\n  }, this);\n\n  const pageCalculation = () => {\n    let lastIndex = currentPage * perPage;\n    let firstIndex = lastIndex - perPage;\n    return data.slice(firstIndex, lastIndex).map(book => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: book.authors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\"\\u20B9\", book.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: book.average_rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, book.bookID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Books, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BooksContainer, \"by6aHuHdOlfV+oawD1NXx1hbTJg=\", false, function () {\n  return [useFetch];\n});\n\n_c = BooksContainer;\nexport default BooksContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksContainer\");","map":{"version":3,"sources":["/home/codilar/ReactHooks/hook-app/src/component/Books/Books.container.js"],"names":["useFetch","Books","BooksContainer","perPage","useState","url","isLoading","error","data","status","pageCalculation","lastIndex","currentPage","firstIndex","slice","map","book","title","authors","price","average_rating","bookID"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAK,CAACC,OAAD,IAAYC,QAAjB;AAEA,QAAMC,GAAG,GAAG,0EAAZ;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,IAAI,GAAC;AAAzB,MAAgCR,QAAQ,CAACK,GAAD,CAA9C,CAJyB,CAKzB;;AAEA,MAAGC,SAAH,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,MAAGC,KAAH,EAAU,oBAAO;AAAA,cAAMA,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEV,QAAMC,eAAe,GAAG,MAAM;AAC1B,QAAIC,SAAS,GAAGC,WAAW,GAAGT,OAA9B;AACA,QAAIU,UAAU,GAAGF,SAAS,GAAGR,OAA7B;AAEA,WAAQK,IAAI,CAACM,KAAL,CAAWD,UAAX,EAAuBF,SAAvB,EACHI,GADG,CACCC,IAAI,IAAI;AACT,0BACI;AAAA,gCACI;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,+BAAMF,IAAI,CAACG,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAASJ,IAAI,CAACK,MAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KAVG,CAAR;AAYH,GAhBD;;AAkBA,sBACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjCD;;GAAMnB,c;UAIoCF,Q;;;KAJpCE,c;AAmCN,eAAeA,cAAf","sourcesContent":["import useFetch from \"react-fetch-hook\";\nimport Books from \"./Books.component\";\n\nconst BooksContainer = () => {\n    const[perPage] = useState\n\n    const url = 'https://s3-ap-southeast-1.amazonaws.com/he-public-data/books8f8fe52.json';\n    const { isLoading, error, data=[] } = useFetch(url);\n    // console.log(useFetch(url));\n\n    if(isLoading) return <div>Loading...</div>\n    if(error) return <div>{error.status}</div>\n\n    const pageCalculation = () => {\n        let lastIndex = currentPage * perPage;\n        let firstIndex = lastIndex - perPage;\n\n        return (data.slice(firstIndex, lastIndex)\n            .map(book => {\n                return (\n                    <tr key={book.bookID}>\n                        <td>{book.title}</td>\n                        <td>{book.authors}</td>\n                        <td>â‚¹{book.price}</td>\n                        <td>{book.average_rating}</td>\n                    </tr>\n                )\n            })\n        )\n    }\n\n    return(\n        <Books \n\n        />\n    );\n}\n\nexport default BooksContainer"]},"metadata":{},"sourceType":"module"}